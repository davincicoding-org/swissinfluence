/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Socials".
 */
export type Socials =
  | {
      platform:
        | 'INSTAGRAM'
        | 'TIKTOK'
        | 'LINKEDIN'
        | 'YOUTUBE'
        | 'APPLE_PODCAST'
        | 'SPOTIFY'
        | 'TWITCH'
        | 'WEBSITE'
        | 'WHATSAPP';
      url: string;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ScheduleSlots".
 */
export type ScheduleSlots =
  | {
      title: string;
      from?: string | null;
      to?: string | null;
      room?: string | null;
      description: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Language".
 */
export type Language = (
  | 'aa'
  | 'ab'
  | 'ae'
  | 'af'
  | 'ak'
  | 'am'
  | 'an'
  | 'ar'
  | 'as'
  | 'av'
  | 'ay'
  | 'az'
  | 'ba'
  | 'be'
  | 'bg'
  | 'bi'
  | 'bm'
  | 'bn'
  | 'bo'
  | 'br'
  | 'bs'
  | 'ca'
  | 'ce'
  | 'ch'
  | 'co'
  | 'cr'
  | 'cs'
  | 'cu'
  | 'cv'
  | 'cy'
  | 'da'
  | 'de'
  | 'dv'
  | 'dz'
  | 'ee'
  | 'el'
  | 'en'
  | 'eo'
  | 'es'
  | 'et'
  | 'eu'
  | 'fa'
  | 'ff'
  | 'fi'
  | 'fj'
  | 'fo'
  | 'fr'
  | 'fy'
  | 'ga'
  | 'gd'
  | 'gl'
  | 'gn'
  | 'gu'
  | 'gv'
  | 'ha'
  | 'he'
  | 'hi'
  | 'ho'
  | 'hr'
  | 'ht'
  | 'hu'
  | 'hy'
  | 'hz'
  | 'ia'
  | 'id'
  | 'ie'
  | 'ig'
  | 'ii'
  | 'ik'
  | 'io'
  | 'is'
  | 'it'
  | 'iu'
  | 'ja'
  | 'jv'
  | 'ka'
  | 'kg'
  | 'ki'
  | 'kj'
  | 'kk'
  | 'kl'
  | 'km'
  | 'kn'
  | 'ko'
  | 'kr'
  | 'ks'
  | 'ku'
  | 'kv'
  | 'kw'
  | 'ky'
  | 'la'
  | 'lb'
  | 'lg'
  | 'li'
  | 'ln'
  | 'lo'
  | 'lt'
  | 'lu'
  | 'lv'
  | 'mg'
  | 'mh'
  | 'mi'
  | 'mk'
  | 'ml'
  | 'mn'
  | 'mr'
  | 'ms'
  | 'mt'
  | 'my'
  | 'na'
  | 'nb'
  | 'nd'
  | 'ne'
  | 'ng'
  | 'nl'
  | 'nn'
  | 'no'
  | 'nr'
  | 'nv'
  | 'ny'
  | 'oc'
  | 'oj'
  | 'om'
  | 'or'
  | 'os'
  | 'pa'
  | 'pi'
  | 'pl'
  | 'ps'
  | 'pt'
  | 'qu'
  | 'rm'
  | 'rn'
  | 'ro'
  | 'ru'
  | 'rw'
  | 'sa'
  | 'sc'
  | 'sd'
  | 'se'
  | 'sg'
  | 'si'
  | 'sk'
  | 'sl'
  | 'sm'
  | 'sn'
  | 'so'
  | 'sq'
  | 'sr'
  | 'ss'
  | 'st'
  | 'su'
  | 'sv'
  | 'sw'
  | 'ta'
  | 'te'
  | 'tg'
  | 'th'
  | 'ti'
  | 'tk'
  | 'tl'
  | 'tn'
  | 'to'
  | 'tr'
  | 'ts'
  | 'tt'
  | 'tw'
  | 'ty'
  | 'ug'
  | 'uk'
  | 'ur'
  | 'uz'
  | 've'
  | 'vi'
  | 'vo'
  | 'wa'
  | 'wo'
  | 'xh'
  | 'yi'
  | 'yo'
  | 'za'
  | 'zh'
)[];
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Canton".
 */
export type Canton =
  | 'AG'
  | 'AR'
  | 'AI'
  | 'BS'
  | 'BL'
  | 'BE'
  | 'FR'
  | 'GE'
  | 'GL'
  | 'GR'
  | 'JU'
  | 'LU'
  | 'NE'
  | 'NW'
  | 'OW'
  | 'SG'
  | 'SH'
  | 'SO'
  | 'SZ'
  | 'TG'
  | 'TI'
  | 'UR'
  | 'VD'
  | 'VS'
  | 'ZG'
  | 'ZH';
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    photos: Photo;
    logos: Logo;
    'profile-pictures': ProfilePicture;
    categories: Category;
    influencers: Influencer;
    experts: Expert;
    brands: Brand;
    locations: Location;
    awards: Award;
    'award-shows': AwardShow;
    'creator-challenges': CreatorChallenge;
    'social-media-campaigns': SocialMediaCampaign;
    'network-events': NetworkEvent;
    'certified-influencers': CertifiedInfluencer;
    agencies: Agency;
    conventions: Convention;
    polyglot_messages: PolyglotMessage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    photos: PhotosSelect<false> | PhotosSelect<true>;
    logos: LogosSelect<false> | LogosSelect<true>;
    'profile-pictures': ProfilePicturesSelect<false> | ProfilePicturesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    influencers: InfluencersSelect<false> | InfluencersSelect<true>;
    experts: ExpertsSelect<false> | ExpertsSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    awards: AwardsSelect<false> | AwardsSelect<true>;
    'award-shows': AwardShowsSelect<false> | AwardShowsSelect<true>;
    'creator-challenges': CreatorChallengesSelect<false> | CreatorChallengesSelect<true>;
    'social-media-campaigns': SocialMediaCampaignsSelect<false> | SocialMediaCampaignsSelect<true>;
    'network-events': NetworkEventsSelect<false> | NetworkEventsSelect<true>;
    'certified-influencers': CertifiedInfluencersSelect<false> | CertifiedInfluencersSelect<true>;
    agencies: AgenciesSelect<false> | AgenciesSelect<true>;
    conventions: ConventionsSelect<false> | ConventionsSelect<true>;
    polyglot_messages: PolyglotMessagesSelect<false> | PolyglotMessagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    company: Company;
    network: Network;
  };
  globalsSelect: {
    company: CompanySelect<false> | CompanySelect<true>;
    network: NetworkSelect<false> | NetworkSelect<true>;
  };
  locale: 'en' | 'de' | 'fr' | 'it';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  access?: {
    users?: boolean | null;
    content?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "photos".
 */
export interface Photo {
  id: number;
  alt?: string | null;
  prefix?: string | null;
  blurhash?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "logos".
 */
export interface Logo {
  id: number;
  prefix?: string | null;
  blurhash?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "profile-pictures".
 */
export interface ProfilePicture {
  id: number;
  prefix?: string | null;
  blurhash?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  legacyId: number;
  image: number | Photo;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "influencers".
 */
export interface Influencer {
  id: number;
  legacyId: number;
  name: string;
  socials?: Socials;
  image: number | ProfilePicture;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experts".
 */
export interface Expert {
  id: number;
  legacyId: number;
  name: string;
  description: string;
  socials?: Socials;
  image: number | ProfilePicture;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  legacyId: number;
  logo: number | Logo;
  name: string;
  website: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  legacyId: number;
  name: string;
  city: string;
  url: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "awards".
 */
export interface Award {
  id: number;
  legacyId: number;
  year: number;
  newcomerScoutDeadline?: string | null;
  newcomerScoutUrl?: string | null;
  nominationDeadline?: string | null;
  nominationUrl?: string | null;
  votingDeadline?: string | null;
  categories?:
    | {
        category: number | Category;
        sponsor?: (number | null) | Brand;
        winnerImage?: (number | null) | ProfilePicture;
        nominees?:
          | {
              influencer: number | Influencer;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  jury?:
    | {
        expert: number | Expert;
        id?: string | null;
      }[]
    | null;
  partners?:
    | {
        brand: number | Brand;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "award-shows".
 */
export interface AwardShow {
  id: number;
  legacyId: number;
  award: number | Award;
  date?: string | null;
  location: number | Location;
  registrationUrl?: string | null;
  schedule?: ScheduleSlots;
  videoUrl?: string | null;
  images?: (number | Photo)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creator-challenges".
 */
export interface CreatorChallenge {
  id: number;
  legacyId: number;
  image: number | Photo;
  organizer: number | Brand;
  location?: (number | null) | Location;
  dateFrom?: string | null;
  dateTo?: string | null;
  registrationUrl?: string | null;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media-campaigns".
 */
export interface SocialMediaCampaign {
  id: number;
  legacyId: number;
  image: number | Photo;
  organizer: number | Brand;
  location?: (number | null) | Location;
  dateFrom?: string | null;
  dateTo?: string | null;
  registrationUrl?: string | null;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "network-events".
 */
export interface NetworkEvent {
  id: number;
  legacyId: number;
  logo: number | Logo;
  image: number | Photo;
  location: number | Location;
  dateFrom?: string | null;
  dateTo?: string | null;
  registrationUrl?: string | null;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certified-influencers".
 */
export interface CertifiedInfluencer {
  id: number;
  legacyId: number;
  image: number | Photo;
  categories: (number | Category)[];
  birthdate: string;
  languages: Language;
  residence: Canton;
  influencer: number | Influencer;
  bio: string;
  interests?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agencies".
 */
export interface Agency {
  id: number;
  legacyId: number;
  logo: number | Logo;
  image: number | Photo;
  name: string;
  website: string;
  email: string;
  description: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conventions".
 */
export interface Convention {
  id: number;
  legacyId: number;
  title: string;
  date: string;
  location: number | Location;
  registrationUrl?: string | null;
  partners?: (number | Brand)[] | null;
  schedule?: ScheduleSlots;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "polyglot_messages".
 */
export interface PolyglotMessage {
  id: number;
  locale: string;
  content:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'photos';
        value: number | Photo;
      } | null)
    | ({
        relationTo: 'logos';
        value: number | Logo;
      } | null)
    | ({
        relationTo: 'profile-pictures';
        value: number | ProfilePicture;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'influencers';
        value: number | Influencer;
      } | null)
    | ({
        relationTo: 'experts';
        value: number | Expert;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'awards';
        value: number | Award;
      } | null)
    | ({
        relationTo: 'award-shows';
        value: number | AwardShow;
      } | null)
    | ({
        relationTo: 'creator-challenges';
        value: number | CreatorChallenge;
      } | null)
    | ({
        relationTo: 'social-media-campaigns';
        value: number | SocialMediaCampaign;
      } | null)
    | ({
        relationTo: 'network-events';
        value: number | NetworkEvent;
      } | null)
    | ({
        relationTo: 'certified-influencers';
        value: number | CertifiedInfluencer;
      } | null)
    | ({
        relationTo: 'agencies';
        value: number | Agency;
      } | null)
    | ({
        relationTo: 'conventions';
        value: number | Convention;
      } | null)
    | ({
        relationTo: 'polyglot_messages';
        value: number | PolyglotMessage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  access?:
    | T
    | {
        users?: T;
        content?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "photos_select".
 */
export interface PhotosSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  blurhash?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "logos_select".
 */
export interface LogosSelect<T extends boolean = true> {
  prefix?: T;
  blurhash?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "profile-pictures_select".
 */
export interface ProfilePicturesSelect<T extends boolean = true> {
  prefix?: T;
  blurhash?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  legacyId?: T;
  image?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "influencers_select".
 */
export interface InfluencersSelect<T extends boolean = true> {
  legacyId?: T;
  name?: T;
  socials?: T | SocialsSelect<T>;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Socials_select".
 */
export interface SocialsSelect<T extends boolean = true> {
  platform?: T;
  url?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experts_select".
 */
export interface ExpertsSelect<T extends boolean = true> {
  legacyId?: T;
  name?: T;
  description?: T;
  socials?: T | SocialsSelect<T>;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  legacyId?: T;
  logo?: T;
  name?: T;
  website?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  legacyId?: T;
  name?: T;
  city?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "awards_select".
 */
export interface AwardsSelect<T extends boolean = true> {
  legacyId?: T;
  year?: T;
  newcomerScoutDeadline?: T;
  newcomerScoutUrl?: T;
  nominationDeadline?: T;
  nominationUrl?: T;
  votingDeadline?: T;
  categories?:
    | T
    | {
        category?: T;
        sponsor?: T;
        winnerImage?: T;
        nominees?:
          | T
          | {
              influencer?: T;
              id?: T;
            };
        id?: T;
      };
  jury?:
    | T
    | {
        expert?: T;
        id?: T;
      };
  partners?:
    | T
    | {
        brand?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "award-shows_select".
 */
export interface AwardShowsSelect<T extends boolean = true> {
  legacyId?: T;
  award?: T;
  date?: T;
  location?: T;
  registrationUrl?: T;
  schedule?: T | ScheduleSlotsSelect<T>;
  videoUrl?: T;
  images?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ScheduleSlots_select".
 */
export interface ScheduleSlotsSelect<T extends boolean = true> {
  title?: T;
  from?: T;
  to?: T;
  room?: T;
  description?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creator-challenges_select".
 */
export interface CreatorChallengesSelect<T extends boolean = true> {
  legacyId?: T;
  image?: T;
  organizer?: T;
  location?: T;
  dateFrom?: T;
  dateTo?: T;
  registrationUrl?: T;
  title?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media-campaigns_select".
 */
export interface SocialMediaCampaignsSelect<T extends boolean = true> {
  legacyId?: T;
  image?: T;
  organizer?: T;
  location?: T;
  dateFrom?: T;
  dateTo?: T;
  registrationUrl?: T;
  title?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "network-events_select".
 */
export interface NetworkEventsSelect<T extends boolean = true> {
  legacyId?: T;
  logo?: T;
  image?: T;
  location?: T;
  dateFrom?: T;
  dateTo?: T;
  registrationUrl?: T;
  title?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certified-influencers_select".
 */
export interface CertifiedInfluencersSelect<T extends boolean = true> {
  legacyId?: T;
  image?: T;
  categories?: T;
  birthdate?: T;
  languages?: T;
  residence?: T;
  influencer?: T;
  bio?: T;
  interests?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agencies_select".
 */
export interface AgenciesSelect<T extends boolean = true> {
  legacyId?: T;
  logo?: T;
  image?: T;
  name?: T;
  website?: T;
  email?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conventions_select".
 */
export interface ConventionsSelect<T extends boolean = true> {
  legacyId?: T;
  title?: T;
  date?: T;
  location?: T;
  registrationUrl?: T;
  partners?: T;
  schedule?: T | ScheduleSlotsSelect<T>;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "polyglot_messages_select".
 */
export interface PolyglotMessagesSelect<T extends boolean = true> {
  locale?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company".
 */
export interface Company {
  id: number;
  name: string;
  address: string;
  whatsappUrl: string;
  contactUrl: string;
  newsletterUrl: string;
  socials?: Socials;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "network".
 */
export interface Network {
  id: number;
  influencerApplicationUrl: string;
  agencyApplicationUrl: string;
  cooperationApplicationUrl: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company_select".
 */
export interface CompanySelect<T extends boolean = true> {
  name?: T;
  address?: T;
  whatsappUrl?: T;
  contactUrl?: T;
  newsletterUrl?: T;
  socials?: T | SocialsSelect<T>;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "network_select".
 */
export interface NetworkSelect<T extends boolean = true> {
  influencerApplicationUrl?: T;
  agencyApplicationUrl?: T;
  cooperationApplicationUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}